name: Build Multiplatform (self-hosted)
on:
    workflow_dispatch:
  
jobs:
  test:
    name: Build
    runs-on: beershost-debian
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # windows_x64
          #- StandaloneWindows # windows_x86 (disable for now)
          - StandaloneLinux64 # linux_binary
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
        
      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2022.3.17f1
          targetPlatform: ${{ matrix.targetPlatform }}
      # export to artifact
      - uses: actions/upload-artifact@v3 # output
        with:
          name: aquamarineBuild-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
